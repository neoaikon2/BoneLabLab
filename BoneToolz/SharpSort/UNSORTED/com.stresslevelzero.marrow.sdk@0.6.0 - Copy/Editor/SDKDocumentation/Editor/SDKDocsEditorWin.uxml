<ui:UXML xmlns:ui="UnityEngine.UIElements" xmlns:uie="UnityEditor.UIElements" editor-extension-mode="True">
    <Style src="project://database/Packages/com.stresslevelzero.marrow.sdk/Editor/Assets/EditorStyleSheets/MarrowStyles.uss?fileID=7433441132597879392&amp;guid=7ebe2475af85eae4ca7aeb90fab90275&amp;type=3#MarrowStyles" />
    <ui:VisualElement name="sdkDocsParentContainer">
        <ui:VisualElement name="marrowWikiContainer" style="width: 100%; flex-shrink: 0;">
            <ui:VisualElement name="docsWikiButtonContainer" style="margin-bottom: 10px;">
                <ui:Button text="MarrowSDK Wiki" display-tooltip-when-elided="true" name="docsWikiButton" binding-path="docsWikiButton" tooltip="The MarrowSDK Wiki will contain the most current SDK documentation and will have additional details and images not available in-editor." style="margin-top: 1px; margin-bottom: 1px; padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; -unity-font-style: bold; font-size: 14px;" />
            </ui:VisualElement>
        </ui:VisualElement>
        <ui:VisualElement name="sdkDocsSearchToolbarContainer" style="flex-direction: row; justify-content: space-between; flex-shrink: 0; align-items: center;">
            <ui:VisualElement name="sdkDocsSearchContainer" style="width: 260px;">
                <uie:ToolbarSearchField name="sdkDocsSearchField" style="width: 250px;" />
            </ui:VisualElement>
            <ui:VisualElement name="sdkDocsToolbarContainer" style="width: auto; flex-direction: row; justify-content: flex-end; border-left-color: rgb(128, 128, 128); border-right-color: rgb(128, 128, 128); border-top-color: rgb(128, 128, 128); border-bottom-color: rgb(128, 128, 128); border-left-width: 1px; border-right-width: 1px; border-top-width: 1px; border-bottom-width: 1px; border-top-left-radius: 5px; border-bottom-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 5px; margin-right: 5px;">
                <ui:Button text="S" display-tooltip-when-elided="true" name="docsChecklistModeSpawnersButton" binding-path="docsChecklistModeSpawnersButton" tooltip="Toggle Spawners Checklist" style="width: 20px; height: 20px; margin-top: 2px;" />
                <ui:Button text="A" display-tooltip-when-elided="true" name="docsChecklistModeAvatarsButton" binding-path="docsChecklistModeAvatarsButton" tooltip="Toggle Avatars Checklist" style="width: 20px; height: 20px; margin-top: 2px;" />
                <ui:Button text="L" display-tooltip-when-elided="true" name="docsChecklistModeLevelsButton" binding-path="docsChecklistModeLevelsButton" tooltip="Toggle Levels Checklist" style="width: 20px; height: 20px; margin-top: 2px; margin-bottom: 2px;" />
            </ui:VisualElement>
        </ui:VisualElement>
        <ui:VisualElement name="sdkDocsContentParentContainer" style="margin-top: 10px;">
            <ui:ScrollView name="sdkDocsScrollView" mode="Vertical" horizontal-scroller-visibility="Hidden" vertical-scroller-visibility="Auto" class="sdkdocs">
                <ui:VisualElement name="docsContainer" style="width: 330px;">
                    <ui:VisualElement name="docsAssetWarehouseContainer" style="flex-shrink: 0;">
                        <ui:VisualElement name="docsSDKSetupButtonContainer" style="flex-shrink: 0; flex-direction: row; align-items: flex-start;">
                            <ui:Foldout name="docsSDKSetupFoldout" value="false" style="flex-direction: column; height: auto; width: 22px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; margin-right: 2px; margin-left: 2px; margin-top: 2px; margin-bottom: 2px; flex-shrink: 0; flex-grow: 0; flex-wrap: nowrap;">
                                <ui:VisualElement style="width: 100%; min-width: 320px;">
                                    <ui:Label text="How to Use this Documentation" display-tooltip-when-elided="true" name="docsHowToUseTitle" style="margin-left: 20px; margin-top: 20px; -unity-font-style: bold; font-size: 14px;" />
                                    <ui:Label text="Each documentation section can be expanded for more details.  Buttons will link to the same topic on the MarrowSDK Wiki.  Video buttons will open a tutorial video on the subject." display-tooltip-when-elided="true" name="docsHowToUse" style="margin-top: 10px; margin-left: 20px; white-space: normal;" />
                                    <ui:Label text="First Steps" display-tooltip-when-elided="true" name="docsFirstStepsTitle" style="margin-left: 20px; margin-top: 10px; -unity-font-style: bold; font-size: 14px;" />
                                    <ui:Label text="The SDK should automatically validate its settings.  If you encounter issues, you can Validate Project Settings from the Stress Level Zero -&gt; Void Tools -&gt; Validate Marrow Project Settings menu." display-tooltip-when-elided="true" name="docsFirstSteps" style="margin-top: 10px; margin-left: 20px; white-space: normal;" />
                                    <ui:Label text="Create New &quot;Working Pallet&quot;" display-tooltip-when-elided="true" name="docsGettingStartedCreateNewPalletTitle" binding-path="docsGettingStartedCreateNewPalletTitle" style="margin-left: 20px; margin-top: 10px; -unity-font-style: bold; font-size: 14px;" />
                                    <ui:Label text="Marrow SDK content is organized into Pallets that contain one or many Crates.  Crates represent the physical content of the game, like Avatars, Spawnables and Levels.  Pallets can also contain Data Cards, which are digital content, like BoneTags that provide a way to reference the player or Mono Discs, which refer to music tracks.  &#10;&#10;External Pallets, like the &lt;b&gt;BONELAB Content Pallet&lt;/b&gt;, can be included as dependencies.  External Pallets allow you to reference vanilla game content or even pallets from other mods without needing to include the actual files or assets in your project." display-tooltip-when-elided="true" name="docsGettingStartedCreateNewPallet" style="margin-top: 10px; margin-left: 20px; white-space: normal;" />
                                    <ui:Button text="       Create New Pallet" display-tooltip-when-elided="true" name="docsCreateNewPalletButton" binding-path="docsCreateNewPalletButton" style="width: 80%; margin-left: 20px; margin-top: 10px; margin-bottom: 0; height: 20px;" />
                                    <ui:Label text="Pallets are stored and organized in the Asset Warehouse, which acts as a central hub for mod content." display-tooltip-when-elided="true" name="docsGettingStartedCreateNewPallet" style="margin-top: 10px; margin-left: 20px; white-space: normal;" />
                                    <ui:Label text="Import BONELAB Content" display-tooltip-when-elided="true" name="docsGettingStartedImportBonelabPalletTitle" style="margin-left: 20px; margin-top: 10px; -unity-font-style: bold; font-size: 14px;" />
                                    <ui:Label text="The Marrow SDK attempts to locate your BONELAB installation automatically.  If your game is installed in a non-typical location, you can use the Game Install Locator to browse to it or even search all fixed drives for it." display-tooltip-when-elided="true" name="docsGettingStartedImportBonelabPallet" style="margin-top: 10px; margin-left: 20px; white-space: normal;" />
                                    <ui:Button text="Game Install Locator" display-tooltip-when-elided="true" name="docsGameInstallLocatorButton" binding-path="docsGameInstallLocatorButton" style="width: 80%; margin-left: 20px; margin-top: 10px; margin-bottom: 0; height: 20px;" />
                                    <ui:Label text="Once your game install is confirmed, refresh the Asset Warehouse to see the External Pallets that contain the BONELAB Content Pallet that includes vanilla spawnable, avatar, level, music and ambience content that can be used in your project." display-tooltip-when-elided="true" name="docsGettingStartedImportBonelabPallet" style="margin-top: 10px; margin-left: 20px; white-space: normal;" />
                                </ui:VisualElement>
                            </ui:Foldout>
                            <ui:Button text="Getting Started" display-tooltip-when-elided="true" name="docsMarrowSDKSetupButton" binding-path="docsMarrowSDKSetupButton" tooltip="Open the MarrowSDK Setup Wiki entry in the default web browser" class="buttonlink" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; width: 80%;" />
                            <ui:Button display-tooltip-when-elided="true" name="docsMarrowSDKSetupVideoButton" binding-path="docsMarrowSDKSetupVideoButton" tooltip="Open the MarrowSDK Setup video tutorial in the default web browser" style="width: 30px; height: 30px; margin-left: 0; margin-right: 0; margin-top: 0; margin-bottom: 0;" />
                        </ui:VisualElement>
                        <ui:Label text="Asset Warehouse and Crates" display-tooltip-when-elided="true" name="docsCratesLabel" style="margin-bottom: 5px; margin-left: 5px; -unity-font-style: bold; font-size: 16px; margin-top: 5px;" />
                        <ui:VisualElement name="docsAssetWarehouseContainer" style="flex-direction: row; margin-bottom: 10px; align-items: flex-start; flex-shrink: 0;">
                            <ui:Foldout name="docsAssetWarehouseFoldout" value="false" tooltip="Expand for more info" binding-path="docsAssetWarehouseFoldout" style="flex-direction: column; height: auto; width: 22px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; margin-right: 2px; margin-left: 2px; margin-top: 2px; margin-bottom: 5px; flex-shrink: 0; flex-grow: 0; flex-wrap: nowrap;">
                                <ui:VisualElement style="min-width: 320px; width: 100%;">
                                    <ui:Label text="The Asset Warehouse is a centralized collection of Pallets that contain game content used to create levels, custom avatars and other mod content.  Pallets are broken down into various Crate types, like Levels, Spawners and Avatars.\n&#10;The Asset Warehouse also organizes key meta information into DataCards.  Mono Discs provide a library of audio content while BoneTags are used to define permissions when activating events or triggering actions within a level." display-tooltip-when-elided="true" name="docsAssetWarehouseOverview" binding-path="docsAssetWarehouseOverview" style="margin-top: 20px; margin-left: 20px; flex-wrap: wrap; width: auto; white-space: normal;" />
                                </ui:VisualElement>
                            </ui:Foldout>
                            <ui:Button text="Asset Warehouse" display-tooltip-when-elided="true" name="docsAssetWarehouseButton" binding-path="docsAssetWarehouseButton" tooltip="Open the Asset Warehouse Window" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; width: 80%;" />
                        </ui:VisualElement>
                        <ui:VisualElement name="docsCrateSpawnersButtonContainer" style="flex-direction: row; align-items: flex-start; flex-shrink: 0;">
                            <ui:Foldout name="docsChecklistSpawnersFoldout" value="false" tooltip="Expand for more info" binding-path="docsChecklistSpawnersFoldout" style="flex-direction: column; height: auto; width: 22px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; margin-right: 2px; margin-left: 2px; margin-top: 2px; margin-bottom: 5px; flex-shrink: 0; flex-grow: 0; flex-wrap: nowrap;">
                                <ui:VisualElement style="min-width: 320px; width: 100%;">
                                    <ui:Label text="The BONELAB Content Pallet is an External Pallet will add all of the vanilla game spawnables to the MarrowSDK, like enemies, NPCs, destructible crates, weapons, ammo boxes, keys, gym blocks,  and props.&#10;&#10;You can add Bonelab Content Pallet using the instructions detailed in the Getting Started section of this documentation.  &#10;&#10;Once added to the Asset Warehouse, you can drag-and-drop CrateSpawners into the Scene using the &lt;i&gt;Asset Warehouse Spawner Overlay&lt;/i&gt; (click the Scene View and then press SPACE to show the Overlay selection tool) or the &lt;i&gt;Asset Warehouse Spawner Window&lt;/i&gt;, which provides the same drag/drop functionality but in a dockable window form." display-tooltip-when-elided="true" name="docsBonelabContentPalletImport" binding-path="docsBonelabContentPalletImport" style="margin-top: 20px; margin-left: 20px; flex-wrap: wrap; width: auto; white-space: normal;" />
                                    <ui:Button text="AW Spawner Overlay" display-tooltip-when-elided="true" name="docsSpawnersAWSpawnOverlayButton" tooltip="Open the Asset Warehouse Spawner Overlay" binding-path="docsSpawnersAWSpawnOverlayButton" style="margin-left: 20px; width: 250px; margin-top: 3px; margin-bottom: 3px;" />
                                    <ui:Button text="AW Spawner Window" display-tooltip-when-elided="true" name="docsSpawnersAWSpawnWindowButton" tooltip="Open the Asset Warehouse Spawner Window" binding-path="docsSpawnersAWSpawnWindowButton" style="margin-left: 20px; width: 250px; margin-top: 3px; margin-bottom: 3px;" />
                                    <ui:Label text="The tools to create custom Spawners are not yet included in the SDK." display-tooltip-when-elided="true" name="docsBonelabContentPalletImportNoCustomYet" binding-path="docsBonelabContentPalletImportNoCustomYet" style="margin-top: 2px; margin-left: 20px; flex-wrap: wrap; white-space: normal; width: auto;" />
                                </ui:VisualElement>
                            </ui:Foldout>
                            <ui:Button text="Spawners" display-tooltip-when-elided="true" name="docsCrateSpawnersButton" binding-path="docsCrateSpawnersButton" tooltip="Open the Crate Spawners entry in the default web browser" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; margin-bottom: 5px; margin-left: 12px; width: 78%; align-items: flex-end;" />
                        </ui:VisualElement>
                        <ui:VisualElement name="docsCrateAvatarsButtonContainer" style="flex-shrink: 0; flex-direction: row; align-items: flex-start;">
                            <ui:Foldout name="docsChecklistAvatarsFoldout" tooltip="Expand for more info" value="false" binding-path="docsChecklistAvatarsFoldout" style="flex-direction: column; height: auto; width: 22px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; margin-right: 2px; margin-left: 2px; margin-top: 2px; margin-bottom: 5px; flex-shrink: 0; flex-grow: 0; flex-wrap: nowrap;">
                                <ui:VisualElement name="docsAvatarsContainer" style="width: 320px;">
                                    <ui:Label text="Avatars alter the player&apos;s appearance, size, strength and speed." display-tooltip-when-elided="true" name="docsAvatarDescription" style="margin-top: 20px; margin-left: 20px; white-space: normal; margin-bottom: 5px;" />
                                    <ui:VisualElement name="docsAvatarChecklistResetContainer" style="flex-direction: row; justify-content: space-between; display: flex;">
                                        <ui:Label text="Avatar Import Checklist" display-tooltip-when-elided="true" name="docsAvatarImportLabel" style="margin-top: 5px; margin-left: 20px; white-space: normal; margin-bottom: 5px; -unity-font-style: bold; font-size: 14px;" />
                                        <ui:Button text="Reset" display-tooltip-when-elided="true" name="docsAvatarChecklistResetButton" binding-path="docsAvatarChecklistResetButton" />
                                    </ui:VisualElement>
                                    <ui:VisualElement name="docsChecklistAvatarPrepareModelContainer" style="border-left-color: rgb(128, 128, 128); border-right-color: rgb(128, 128, 128); border-top-color: rgb(128, 128, 128); border-bottom-color: rgb(128, 128, 128); border-left-width: 1px; border-right-width: 1px; border-top-width: 1px; border-bottom-width: 1px; border-top-left-radius: 5px; border-bottom-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 5px; padding-left: 5px; padding-right: 5px; padding-top: 5px; padding-bottom: 5px; display: flex;">
                                        <ui:Label text="Prepare the Model" display-tooltip-when-elided="true" name="docsAvatarPrepareModel" binding-path="docsAvatarPrepareModel" style="margin-top: 5px; margin-left: 20px; white-space: normal; margin-bottom: 5px; -unity-font-style: bold; font-size: 12px;" />
                                        <ui:Toggle label="Avatar is a Mechanim Humanoid" name="docsChecklistAvatarHumanoid" binding-path="docsChecklistAvatarHumanoid" class="checklist" />
                                        <ui:Toggle label="Ensure the model being imported is properly weight-painted in Blender, Maya or other external 3D app." name="docsChecklistAvatarWeightPainted" binding-path="docsChecklistAvatarWeightPainted" class="checklist" />
                                        <ui:Toggle label="Ensure the model import settings match the instructions on the Wiki" name="docsChecklistAvatarModelImport" binding-path="docsChecklistAvatarModelImport" class="checklist" />
                                        <ui:Toggle label="Avatar has two (2) eyes or no eyes and an eye center override." name="docsChecklistAvatarEyes" binding-path="docsChecklistAvatarEyes" class="checklist" />
                                        <ui:Toggle label="Avatar has the required bones.  " name="docsChecklistAvatarRequiredBones" binding-path="docsChecklistAvatarRequiredBones" class="checklist" />
                                        <ui:VisualElement name="docsChecklistAvatarReviewBonesContainer">
                                            <ui:Foldout text="Review Required and Optional Bones" name="docsCheclistAvatarRequiredBonesFoldout" binding-path="docsCheclistAvatarRequiredBonesFoldout" value="false" class="foldoutindent15" style="flex-shrink: 0; flex-wrap: nowrap; -unity-font-style: bold-and-italic;">
                                                <ui:VisualElement name="docsChecklistAvatarImageContainer" style="flex-shrink: 0; left: -25px; margin-top: 5px; margin-bottom: 5px;">
                                                    <ui:Label text="Bones shown with blue dots are optional. All other bones are &lt;b&gt;&lt;i&gt;required&lt;/i&gt;&lt;/b&gt; even if they are listed as optional in Unity." display-tooltip-when-elided="true" style="white-space: normal;" />
                                                    <ui:VisualElement name="docsChecklistAvatarBonesImageBodyContainer" style="flex-shrink: 0; width: 300px; height: 200px; margin-bottom: 5px;">
                                                        <ui:Button text="Open Larger Image" display-tooltip-when-elided="true" name="docsChecklistAvatarBonesImageBodyButton" binding-path="docsChecklistAvatarBonesImageBodyButton" style="width: 300px; margin-left: 0;" />
                                                    </ui:VisualElement>
                                                    <ui:VisualElement name="docsChecklistAvatarBonesImageHeadContainer" style="flex-shrink: 0; width: 300px; height: 200px; margin-bottom: 5px;">
                                                        <ui:Button text="Open Larger Image" display-tooltip-when-elided="true" name="docsChecklistAvatarBonesImageHeadButton" binding-path="docsChecklistAvatarBonesImageHeadButton" style="width: 300px; margin-left: 0;" />
                                                    </ui:VisualElement>
                                                    <ui:VisualElement name="docsChecklistAvatarBonesImageHandContainer" style="flex-shrink: 0; width: 300px; height: 200px; margin-bottom: 5px;">
                                                        <ui:Button text="Open Larger Image" display-tooltip-when-elided="true" name="docsChecklistAvatarBonesImageHandButton" binding-path="docsChecklistAvatarBonesImageHandButton" style="width: 300px; margin-left: 0;" />
                                                    </ui:VisualElement>
                                                </ui:VisualElement>
                                            </ui:Foldout>
                                        </ui:VisualElement>
                                        <ui:Toggle label="Verify that Unity has been able to map bones correctly in the Rig tab of the Inspector. Map manually if needed." name="docsChecklistAvatarMapBones" binding-path="docsChecklistAvatarMapBones" class="checklist" />
                                        <ui:Toggle label="Extract materials if needed and manually apply them to each mesh, ensuring the Shader is set to:\n&lt;i&gt;SLZ/LitMAS/LitMAS Opaque&lt;/i&gt;." name="docsChecklistAvatarApplyMaterials" binding-path="docsChecklistAvatarApplyMaterials" class="checklist" />
                                    </ui:VisualElement>
                                    <ui:VisualElement name="docsChecklistAvatarModelIntoPrefabContainer" style="padding-left: 5px; padding-right: 5px; padding-top: 5px; padding-bottom: 5px; border-left-color: rgb(128, 128, 128); border-right-color: rgb(128, 128, 128); border-top-color: rgb(128, 128, 128); border-bottom-color: rgb(128, 128, 128); border-left-width: 1px; border-right-width: 1px; border-top-width: 1px; border-bottom-width: 1px; border-top-left-radius: 5px; border-bottom-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 5px; display: flex;">
                                        <ui:Label text="Turn the Model Into a Prefab" display-tooltip-when-elided="true" name="docsAvatarModelIntoPrefab" binding-path="docsAvatarModelIntoPrefab" style="margin-top: 5px; margin-left: 20px; white-space: normal; margin-bottom: 5px; -unity-font-style: bold; font-size: 12px;" />
                                        <ui:Toggle label="Drag the model file from the Project Window into the GameObject Hierarchy so it sits at the origin (0,0,0)." name="docsChecklistAvatarCreateGameObject" binding-path="docsChecklistAvatarCreateGameObject" class="checklist" />
                                        <ui:Toggle label="Drag the new GameObject back into the Project Window to create a &lt;i&gt;Prefab Variant&lt;/i&gt;." name="docsChecklistAvatarCreatePrefab" binding-path="docsChecklistAvatarCreatePrefab" class="checklist" />
                                        <ui:Label text="Complete the Avatar Script" display-tooltip-when-elided="true" name="docsAvatarCompleteScript" binding-path="docsAvatarCompleteScript" style="margin-top: 5px; margin-left: 20px; white-space: normal; margin-bottom: 5px; -unity-font-style: bold; font-size: 12px;" />
                                        <ui:Toggle label="Edit the Prefab directly by double-clicking it in the Project Window. If edited in the Scene, &lt;i&gt;Apply Overrides&lt;/i&gt; so the changes are saved to the prefab itself.\n\nOnce completed, the Avatar GameObject does not need to be in the Scene.  Only the Prefab Variant in the Project window is used by the Avatar Crate." name="docsChecklistAvatarEditPrefabDirectly" binding-path="docsChecklistAvatarEditPrefabDirectly" class="checklist" />
                                        <ui:Toggle label="Add at least one Skinned Mesh Renderer element to the Body Meshes list." name="docsChecklistAvatarScriptBodyMeshes" binding-path="docsChecklistAvatarScriptBodyMeshes" class="checklist" />
                                        <ui:Toggle label="Fill the Wrist Left and Wrist Right fields with the appropriate bones.  If the model lacks wrist bones, use the next best option (usually Hand Left, Hand Right)." name="docsChecklistAvatarScriptWristBones" binding-path="docsChecklistAvatarScriptWristBones" class="checklist" />
                                        <ui:Toggle label="If the model lacks eye bones, add an Eye Center Override, and Empty GameObject at the root of the Avatar Prefab (see Wiki for images and additional info)." name="docsChecklistAvatarScriptEyeOverride" binding-path="docsChecklistAvatarScriptEyeOverride" class="checklist" />
                                    </ui:VisualElement>
                                    <ui:VisualElement name="docsChecklistAvatarFineTuneContainer" style="padding-left: 5px; padding-right: 5px; padding-top: 5px; padding-bottom: 5px; border-left-color: rgb(128, 128, 128); border-right-color: rgb(128, 128, 128); border-top-color: rgb(128, 128, 128); border-bottom-color: rgb(128, 128, 128); border-left-width: 1px; border-right-width: 1px; border-top-width: 1px; border-bottom-width: 1px; border-top-left-radius: 5px; border-bottom-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 5px; display: flex;">
                                        <ui:Label text="Fine-Tune the Avatar" display-tooltip-when-elided="true" name="docsAvatarFineTune" binding-path="docsAvatarFineTune" style="margin-top: 5px; margin-left: 20px; white-space: normal; margin-bottom: 5px; -unity-font-style: bold; font-size: 12px;" />
                                        <ui:Toggle label="Click the Edit Body/Soft Body button(s) and drag the gizmos and handles until the elipses conform snugly to the mesh to avoid visual clipping issues." name="docsChecklistAvatarEditBody" binding-path="docsChecklistAvatarEditBody" class="checklist" />
                                        <ui:Toggle label="Adjust the Eye Offset so that the green dot is brought forward enough to not clip into the model&apos;s head.  The green dot acts like the model&apos;s &quot;camera&quot;/viewpoint." name="docsChecklistAvatarEyeOffset" binding-path="docsChecklistAvatarEyeOffset" class="checklist" />
                                        <ui:Toggle label="Add custom sounds as desired.  WAV, OGG, MP3 formats are supported." name="docsChecklistAvatarCustomSounds" binding-path="docsChecklistAvatarCustomSounds" class="checklist" />
                                        <ui:Toggle label="In the same folder as the sound files, right-click an empty area of the Project Window and Create -&gt; MarrowSDK -&gt; Audio Variance Data for each type of sound to be added." name="docsChecklistAvatarAudioVariance" binding-path="docsChecklistAvatarAudioVariance" class="checklist" />
                                        <ui:Toggle label="Add appropriate sound clips to each Audio Variance Data and add the Audio Variance Data object to the Sound Effects list." name="docsChecklistAvatarAddSoundClips" binding-path="docsChecklistAvatarAddSoundClips" class="checklist" />
                                    </ui:VisualElement>
                                    <ui:VisualElement name="docsChecklistAvatarPackPalletContainer" style="border-left-color: rgb(128, 128, 128); border-right-color: rgb(128, 128, 128); border-top-color: rgb(128, 128, 128); border-bottom-color: rgb(128, 128, 128); border-left-width: 1px; border-right-width: 1px; border-top-width: 1px; border-bottom-width: 1px; border-top-left-radius: 5px; border-bottom-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 5px; padding-left: 5px; padding-right: 5px; padding-top: 5px; padding-bottom: 5px; display: flex;">
                                        <ui:Label text="Turning the Avatar Into a Mod" display-tooltip-when-elided="true" name="docsAvatarPackPallet" binding-path="docsAvatarPackPallet" style="margin-top: 5px; margin-left: 20px; white-space: normal; margin-bottom: 5px; -unity-font-style: bold; font-size: 12px;" />
                                        <ui:Toggle label="Select the Avatar mod&apos;s Pallet in the Asset Warehouse Window" name="docsChecklistAvatarOpenAssetWarehouse" binding-path="docsChecklistAvatarOpenAssetWarehouse" class="checklist" />
                                        <ui:Button text="Open Asset Warehouse" display-tooltip-when-elided="true" name="docsOpenAssetWarehouseButtonChecklist" tooltip="Open the Asset Warehouse Window" binding-path="docsOpenAssetWarehouseButtonChecklist" style="margin-left: 20px; width: 250px; margin-top: 3px; margin-bottom: 3px;" />
                                        <ui:Toggle label="Click &lt;i&gt;Add Crate&lt;/i&gt; in the Pallet&apos;s inspector, select the Avatar Crate type, provide a Title and drag the Prefab Variant into the Asset Reference field." name="docsChecklistAvatarAddCrate" binding-path="docsChecklistAvatarAddCrate" class="checklist" />
                                        <ui:Toggle label="Choose the target platform (PC or Quest) and ensure the Avatar Pallet is selected in the Asset Warehouse&apos;s toolbar dropdown.  Then, click the Pack button. " name="docsChecklistAvatarPackPallet" binding-path="docsChecklistAvatarPackPallet" class="checklist" />
                                        <ui:Toggle label="Copy the entire folder that appears once the Pack process completes into your Bonelab &lt;b&gt;Mods&lt;/b&gt; folder.\n\nLaunch the game and test the new custom Avatar!" name="docsChecklistAvatarInstallMod" binding-path="docsChecklistAvatarInstallMod" class="checklist" />
                                    </ui:VisualElement>
                                </ui:VisualElement>
                            </ui:Foldout>
                            <ui:Button text="Avatars" display-tooltip-when-elided="true" name="docsAvatarCrateButton" binding-path="docsAvatarCrateButton" tooltip="Open the Avatar Crate entry in the default web browser" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; margin-bottom: 5px; margin-left: 12px; width: 78%; align-items: flex-end;" />
                            <ui:Button display-tooltip-when-elided="true" name="docsAvatarCrateVideoButton" binding-path="docsAvatarCrateVideoButton" tooltip="Open the Avatars Import Tutorial video in the default web browser" style="width: 30px; height: 30px; margin-left: 0; margin-right: 0; margin-top: 0; margin-bottom: 0;" />
                        </ui:VisualElement>
                        <ui:VisualElement name="docsCrateLevelsButtonContainer" style="flex-direction: row; flex-shrink: 0; align-items: flex-start;">
                            <ui:Foldout name="docsChecklistLevelsFoldout" value="false" tooltip="Expand for more info" binding-path="docsChecklistLevelsFoldout" style="flex-direction: column; height: auto; width: 22px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; margin-right: 2px; margin-left: 2px; margin-top: 2px; margin-bottom: 5px; flex-wrap: nowrap; flex-shrink: 0;">
                                <ui:VisualElement name="docsLevelsContainer" style="width: 320px;">
                                    <ui:Label text="Levels are made of the geometry that defines the player&apos;s environment, spawnables like enemies, props and destructible interactibles, as well as lighting, fog, music, sounds and other effects that bring the environment to life." display-tooltip-when-elided="true" name="docsLevelsDescription" style="margin-top: 20px; margin-left: 20px; white-space: normal; margin-bottom: 5px;" />
                                    <ui:VisualElement name="docsLevelsChecklistResetContainer" style="flex-direction: row; justify-content: space-between;">
                                        <ui:Label text="Level Creation Checklist" display-tooltip-when-elided="true" name="docsLevelCreationLabel" style="margin-top: 5px; margin-left: 20px; white-space: normal; margin-bottom: 5px; -unity-font-style: bold; font-size: 14px;" />
                                        <ui:Button text="Reset" display-tooltip-when-elided="true" name="docsLevelChecklistResetButton" binding-path="docsLevelChecklistResetButton" />
                                    </ui:VisualElement>
                                    <ui:VisualElement name="docsChecklistLevelTemplateContainer" style="border-left-color: rgb(128, 128, 128); border-right-color: rgb(128, 128, 128); border-top-color: rgb(128, 128, 128); border-bottom-color: rgb(128, 128, 128); border-left-width: 1px; border-right-width: 1px; border-top-width: 1px; border-bottom-width: 1px; border-top-left-radius: 5px; border-bottom-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 5px; padding-left: 5px; padding-right: 5px; padding-top: 5px; padding-bottom: 5px;">
                                        <ui:Label text="Open the Level Crate Template" display-tooltip-when-elided="true" name="docsLevelPackPallet" binding-path="docsLevelPackPallet" style="margin-top: 5px; margin-left: 20px; white-space: normal; margin-bottom: 5px; -unity-font-style: bold; font-size: 12px;" />
                                        <ui:Toggle label="Select the Working Pallet in the Asset Warehouse Window" name="docsChecklistLevelOpenAssetWarehouse" binding-path="docsChecklistLevelOpenAssetWarehouse" class="checklist" />
                                        <ui:Button text="Open Asset Warehouse" display-tooltip-when-elided="true" name="docsChecklistLevelOpenAssetWarehouseButton" tooltip="Open the Asset Warehouse Window" binding-path="docsChecklistLevelOpenAssetWarehouseButton" style="margin-left: 20px; width: 250px; margin-top: 3px; margin-bottom: 3px; flex-direction: row;" />
                                        <ui:Toggle label="Click &lt;i&gt;Create Level Crate&lt;/i&gt; in the Pallet&apos;s inspector.  This will generate a template scene with the Player Marker, a Zone, Light and a floor, ready to be modified with custom content." name="docsChecklistLevelAddCrate" binding-path="docsChecklistLevelAddCrate" class="checklist" />
                                    </ui:VisualElement>
                                    <ui:VisualElement name="docsChecklistLevelSetupEnvironmentContainer" style="border-left-color: rgb(128, 128, 128); border-right-color: rgb(128, 128, 128); border-top-color: rgb(128, 128, 128); border-bottom-color: rgb(128, 128, 128); border-left-width: 1px; border-right-width: 1px; border-top-width: 1px; border-bottom-width: 1px; border-top-left-radius: 5px; border-bottom-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 5px; padding-left: 5px; padding-right: 5px; padding-top: 5px; padding-bottom: 5px;">
                                        <ui:Label text="Setup Environment" display-tooltip-when-elided="true" name="docsLevelSetupEnvironmentTitle" binding-path="docsLevelSetupEnvironmentTitle" style="margin-top: 5px; margin-left: 20px; white-space: normal; margin-bottom: 5px; -unity-font-style: bold; font-size: 12px;" />
                                        <ui:Toggle label="Layout Static Environment (Imported Blender meshes, modular prefab meshes, etc.)" name="docsChecklistLevelLayoutEnvironment" binding-path="docsChecklistLevelLayoutEnvironment" class="checklist" />
                                        <ui:Toggle label="Add Stationary and Dynamaic Lighting" name="docsChecklistLevelLights" binding-path="docsChecklistLevelLights" class="checklist" />
                                        <ui:Button text="Light Probe Grid Automation Util" display-tooltip-when-elided="true" name="docsChecklistLevelUtilButton" tooltip="Open the Level Utilities Window" binding-path="docsChecklistLevelUtilButton" style="margin-left: 20px; width: 250px; margin-top: 3px; margin-bottom: 3px; flex-direction: row; display: none;" />
                                        <ui:Toggle label="Add and Arrange Light Probes" name="docsChecklistLevelLightProbes" binding-path="docsChecklistLevelLightProbes" class="checklist" />
                                        <ui:Toggle label="Add Reflection Probes" name="docsChecklistLevelReflectionProbes" binding-path="docsChecklistLevelReflectionProbes" class="checklist" />
                                        <ui:Toggle label="Bake Lights" name="docsChecklistLevelBakeLights" binding-path="docsChecklistLevelBakeLights" class="checklist" />
                                        <ui:Toggle label="Add Fog Volume" name="docsChecklistLevelAddFogVolume" binding-path="docsChecklistLevelAddFogVolume" class="checklist" />
                                        <ui:Toggle label="Bake Fog" name="docsChecklistLevelBakeFog" binding-path="docsChecklistLevelBakeFog" class="checklist" />
                                        <ui:Toggle label="Bake NavMesh" name="docsChecklistLevelBakeNavMesh" binding-path="docsChecklistLevelBakeNavMesh" class="checklist" />
                                        <ui:Toggle label="Bake Occlusion" name="docsChecklistLevelBakeOcclusion" binding-path="docsChecklistLevelBakeOcclusion" class="checklist" />
                                    </ui:VisualElement>
                                    <ui:VisualElement name="docsChecklistLevelSetupZonesEntitiesContainer" style="border-left-color: rgb(128, 128, 128); border-right-color: rgb(128, 128, 128); border-top-color: rgb(128, 128, 128); border-bottom-color: rgb(128, 128, 128); border-left-width: 1px; border-right-width: 1px; border-top-width: 1px; border-bottom-width: 1px; border-top-left-radius: 5px; border-bottom-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 5px; padding-left: 5px; padding-right: 5px; padding-top: 5px; padding-bottom: 5px;">
                                        <ui:Label text="Setup Zones, Entities and Sounds" display-tooltip-when-elided="true" name="docsLevelSetupZonesEntitiesTitle" binding-path="docsLevelSetupZonesEntitiesTitle" style="margin-top: 5px; margin-left: 20px; white-space: normal; margin-bottom: 5px; -unity-font-style: bold; font-size: 12px;" />
                                        <ui:Toggle label="Ensure one Player Marker (spawn point) exists" name="docsChecklistLevelPlacePlayerMarker" binding-path="docsChecklistLevelPlacePlayerMarker" class="checklist" />
                                        <ui:Toggle label="Add Zones" name="docsChecklistLevelAddZones" binding-path="docsChecklistLevelAddZones" class="checklist" />
                                        <ui:Toggle label="Link Zones" name="docsChecklistLevelLinkZones" binding-path="docsChecklistLevelLinkZones" class="checklist" />
                                        <ui:Toggle label="Add CrateSpawners (Enemies, NPCs, Destructible Crates, Props, Weapons, Ammo, etc.)" name="docsChecklistLevelPlaceCrateSpawners" binding-path="docsChecklistLevelPlaceCrateSpawners" class="checklist" />
                                        <ui:Toggle label="Set Zone Permissions" name="docsChecklistLevelZonePermissions" binding-path="docsChecklistLevelZonePermissions" class="checklist" />
                                        <ui:Toggle label="Place Reverb Zones" name="docsChecklistLevelReverbZones" binding-path="docsChecklistLevelReverbZones" class="checklist" />
                                        <ui:Toggle label="Add Zone Music and Zone Ambience" name="docsChecklistLevelZoneMusicAmbience" binding-path="docsChecklistLevelZoneMusicAmbience" class="checklist" />
                                        <ui:Toggle label="Optional: Use Zone Events to add dynamism and reactivity to player actions/progress" name="docsChecklistLevelZoneEvents" binding-path="docsChecklistLevelZoneEvents" class="checklist" />
                                        <ui:Toggle label="Optional: If creating a multi-scene level, click the Multi Scene option in the Level Crate inspector.  The template level will become the Root Persistent Scene.  See the Scene Chunk documentation for more info." name="docsChecklistLevelSceneChunks" binding-path="docsChecklistLevelSceneChunks" class="checklist" />
                                    </ui:VisualElement>
                                    <ui:VisualElement name="docsChecklistLevelPackPalletContainer" style="border-left-color: rgb(128, 128, 128); border-right-color: rgb(128, 128, 128); border-top-color: rgb(128, 128, 128); border-bottom-color: rgb(128, 128, 128); border-left-width: 1px; border-right-width: 1px; border-top-width: 1px; border-bottom-width: 1px; border-top-left-radius: 5px; border-bottom-left-radius: 5px; border-top-right-radius: 5px; border-bottom-right-radius: 5px; padding-left: 5px; padding-right: 5px; padding-top: 5px; padding-bottom: 5px;">
                                        <ui:Label text="Pack the Working Pallet into a Mod" display-tooltip-when-elided="true" name="docsLevelPackPallet" binding-path="docsLevelPackPallet" style="margin-top: 5px; margin-left: 20px; white-space: normal; margin-bottom: 5px; -unity-font-style: bold; font-size: 12px;" />
                                        <ui:Toggle label="Select the Pallet that contains the Level Crate in the Asset Warehouse Window" name="docsChecklistLevelOpenAssetWarehouse" binding-path="docsChecklistLevelOpenAssetWarehouse" class="checklist" />
                                        <ui:Button text="Open Asset Warehouse" display-tooltip-when-elided="true" name="docsChecklistLevelOpenAssetWarehouseButton" tooltip="Open the Asset Warehouse Window" binding-path="docsChecklistLevelOpenAssetWarehouseButton" style="margin-left: 20px; width: 250px; margin-top: 3px; margin-bottom: 3px; flex-direction: row;" />
                                        <ui:Toggle label="Click &lt;i&gt;Pack for PC&lt;/i&gt;, &lt;i&gt;Pack for Quest&lt;/i&gt; or &lt;i&gt;Pack for Both&lt;/i&gt; depending on your target platform(s)." name="docsChecklistLevelPackPallet" binding-path="docsChecklistLevelPackPallet" class="checklist" />
                                        <ui:Toggle label="Copy the entire folder that appears once the Pack process completes into your Bonelab &lt;b&gt;Mods&lt;/b&gt; folder.\n\nLaunch the game and test the new custom Level!" name="docsChecklistLevelInstallMod" binding-path="docsChecklistLevelInstallMod" class="checklist" />
                                    </ui:VisualElement>
                                </ui:VisualElement>
                            </ui:Foldout>
                            <ui:Button text="Levels" display-tooltip-when-elided="true" name="docsLevelCrateButton" binding-path="docsLevelCrateButton" tooltip="Open the Level Crate entry in the default web browser" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; margin-left: 12px; width: 78%; align-items: flex-end; margin-bottom: 5px;" />
                            <ui:Button display-tooltip-when-elided="true" name="docsLevelCrateVideoButton" binding-path="docsLevelCrateVideoButton" tooltip="Open the Level Creation Tutorial video series in the default web browser" style="width: 30px; height: 30px; margin-left: 0; margin-right: 0; margin-top: 0; margin-bottom: 0;" />
                        </ui:VisualElement>
                        <ui:Label text="Building SDK Content" display-tooltip-when-elided="true" name="docsBuildModLabel" style="align-items: flex-start; margin-bottom: 5px; margin-left: 5px; -unity-font-style: bold; font-size: 16px; margin-top: 5px;" />
                        <ui:VisualElement name="docsCustomPalletsButtonContainer" style="flex-direction: row; align-items: flex-start; margin-bottom: 10px; flex-shrink: 0;">
                            <ui:Foldout name="docsCustomPalletsFoldout" tooltip="Expand for more info" value="false" style="height: auto; width: 22px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; margin-right: 2px; margin-left: 2px; margin-top: 2px; margin-bottom: 5px; flex-shrink: 0; flex-grow: 0; flex-wrap: nowrap;">
                                <ui:VisualElement style="width: 320px;">
                                    <ui:Label text="Mod content, like a Level Crate or an Avatar Crate, is organized under a Working Pallet.  When that content is ready to be bundled for testing or final distribution, the Pallet needs to be packed.  &#10;&#10;&lt;b&gt;Pack Working Pallet&lt;/b&gt;&#10;&#10;Select the Working Pallet in the Asset Warehouse window.&#10;&#10;In the Pallet&apos;s inspector, select &lt;i&gt;Pack for PC, Quest or Both&lt;/i&gt; based on your target platform(s).&#10;&#10;After the Pack process completes, the generated mod folder will automatically open.  Copy this entire folder and contents to your &lt;i&gt;Bonelab/MODS&lt;/i&gt; directory.\n&#10;On PC, this is: \n&#10;&lt;b&gt;&lt;i&gt;C:\\Users\\[username]\AppData\LocalLow\Stress Level Zero\BONELAB\MODS&lt;/i&gt;&lt;/b&gt;&#10;&#10;On the Quest platform, to install the mod locally from your PC, connect the headset to your PC with a Link cable.  When prompted in the headset, &lt;i&gt;Allow Files&lt;/i&gt; from the connected device.  On the PC, navigate to: \n&#10;&lt;b&gt;&lt;i&gt;This PC\Quest 2\Internal shared storage\Android\data\com.StressLevelZero.BONELAB\files\Mods&lt;/i&gt;&lt;/b&gt;&#10;&#10;Launch BONELAB.  If the mod is a level, launch it from the Mod Menu.  If the mod is an Avatar, load any map and, assuming the Bodylog has been unlocked, you can select the Avatar from the Avatars menu." display-tooltip-when-elided="true" name="docsPackMod" style="margin-top: 20px; margin-left: 20px; white-space: normal;" />
                                    <ui:TextField picking-mode="Ignore" label="On PC, this is in C:\\Users\[username]\n\AppData\LocalLow by default:" value="%localappdata%low\Stress Level Zero\BONELAB\MODS" text="%localappdata%low\Stress Level Zero\BONELAB\MODS" name="pcModPath" readonly="true" multiline="true" class="checklist" style="margin-top: 10px; flex-direction: column; white-space: normal;" />
                                    <ui:Label text="On the Quest platform, to install the mod locally from your PC, connect the headset to your PC with a Link cable.  When prompted in the headset, &lt;i&gt;Allow Files&lt;/i&gt; from the connected device." display-tooltip-when-elided="true" name="docsPackMod2" style="margin-top: 20px; margin-left: 20px; white-space: normal;" />
                                    <ui:TextField picking-mode="Ignore" label="On the linked PC, navigate to:" value="This PC\Quest 2\Internal shared storage\Android\data\com.StressLevelZero.BONELAB\files\Mods" text="This PC\Quest 2\Internal shared storage\Android\data\com.StressLevelZero.BONELAB\files\Mods" name="questModPath" readonly="true" multiline="true" class="checklist" style="flex-direction: column; margin-top: 10px; white-space: normal;" />
                                    <ui:Label text="Launch BONELAB.  If the mod is a level, launch it from the Mod Menu.  If the mod is an Avatar, load any map and, assuming the Bodylog has been unlocked, you can select the Avatar from the Avatars menu." display-tooltip-when-elided="true" name="docsPackMod3" style="margin-top: 20px; margin-left: 20px; white-space: normal;" />
                                </ui:VisualElement>
                            </ui:Foldout>
                            <ui:Button text="Working Pallets" display-tooltip-when-elided="true" name="docsCustomPalletsButton" binding-path="docsCustomPalletsButton" tooltip="Open the Pallet packing entry in the default web browser" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; width: 80%;" />
                        </ui:VisualElement>
                        <ui:VisualElement name="docsZonesButtonContainer" style="flex-direction: row; align-items: flex-start; margin-bottom: 10px; flex-shrink: 0;">
                            <ui:Foldout name="docsZonesFoldout" tooltip="Expand for more info" value="false" style="height: auto; width: 22px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; margin-right: 2px; margin-left: 2px; margin-top: 2px; margin-bottom: 5px; flex-shrink: 0; flex-grow: 0; flex-wrap: nowrap;">
                                <ui:VisualElement style="width: 320px;">
                                    <ui:Label text="Zones are trigger colliders that define areas that manage the dynamic loading and unloading of resources.  They can activate Crate Spawners and dynamically track the position and status of all entities within them.  As a player enters a Zone, all entities within it and all Zones linked to that zone are triggered.  This ensures that all entities and geometry surrounding the player are loaded and ready for use.  Any zones and their entities that are &lt;i&gt;not&lt;/i&gt; linked to the player&apos;s current zone are frozen in a dormant state and hidden, so that they use almost no resources.&#10;&#10;&lt;b&gt;Zone Creation&lt;/b&gt;&#10;&#10;When creating zones, the best practice is to slightly inset the zone from its surrounding geometry.  This ensures that any entities tracked by the zone do not risk being detected or hit through walls.  While trigger colliders of any type are supported, including convex mesh colliders, Box Colliders are the most common Zone type.  The Zone Creation tools provide an Inset parameter that will fit a Zone to the specified geometry and then shrink the zone by the inset value to ensure this best practice is followed." display-tooltip-when-elided="true" name="docsZonesSummary" style="margin-top: 20px; margin-left: 20px; white-space: normal; margin-bottom: 10px;" />
                                    <ui:Button text="Zone Creation &amp; Linking Overlay" display-tooltip-when-elided="true" name="docsZoneToolsButton" tooltip="Open the Zone  Creation and Linking Overlay" binding-path="docsZoneToolsButton" style="margin-left: 20px; width: 250px; margin-top: 3px; margin-bottom: 3px;" />
                                    <ui:Label text="&lt;b&gt;Zone Linking&lt;/b&gt;&#10;&#10;Zone Linking is used to keep neighboring zones that the player can still see or reach active to ensure entities do not suddenly appear or disappear as the player enters or leaves a Zone&apos;s bounds.  When linking Zones, the best practice is to link them together based on &lt;b&gt;line of-sight&lt;/b&gt; to avoid entities or geometry popping in and out of view as the player crosses into new Zone boundaries.  Line of sight considerations should account for the player&apos;s ability to jump, climb and launch themselves in unexpected ways, including using the Nimbus Gun.&#10;&#10;&lt;b&gt;Zone Culler&lt;/b&gt;&#10;The ZoneCuller&apos;s fields are automatically set to its Zone and ZoneLink scripts and should not need configuration.\n\nZoneCullers track the entities that enter and leave the Zone&apos;s bounds.  Entities and objects will be frozen, culled, hidden or despawned based on their state when the Zone or the Zones it is linked to become inactive.&#10;&#10;The Zone Culler tracks entities and items within the Zone&apos;s bounds and will freeze or cull those objects when the Zone is no longer active as a primary or linked zone.&#10;&#10;&lt;b&gt;Zone Permissions&lt;/b&gt;&#10;&#10;The Zone Link handles the activation permissions for a Zone and maintains a list of links between it and other Zone Links.  Activators can be defined using the BoneTag system or by Crate types from the Asset Warehouse.\n&#10;&lt;i&gt;Permission Types:&lt;/i&gt;\n&#10;- &lt;b&gt;Tag matches&lt;/b&gt; are successful if the item or entity activating the Zone matches &lt;b&gt;&lt;i&gt;all tags&lt;/i&gt;&lt;/b&gt; listed.&#10;- &lt;b&gt;Crate matches&lt;/b&gt; are successful if &lt;b&gt;&lt;i&gt;any&lt;/i&gt;&lt;/b&gt; item or enity spawned from a listed crate is used to activate the Zone.\n&#10;Zones linked with the currently occupied zone keep entities and objects within them loaded and active.  Any Zones and their contents that are not linked with the current one are set to a frozen state, which recovers resources and maintains level performance.\n&#10;The Priority system gives the designer control of which Zone Link should take precedence in cases where a Zone resides entirely within another Zone and the player can occupy both at once." display-tooltip-when-elided="true" name="docsZonesSummary" style="margin-top: 10px; margin-left: 20px; white-space: normal;" />
                                </ui:VisualElement>
                            </ui:Foldout>
                            <ui:Button text="Zones and Zone Links" display-tooltip-when-elided="true" name="docsZonesButton" binding-path="docsZonesButton" tooltip="Open the Zones wiki entry in the default web browser" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; width: 80%;" />
                        </ui:VisualElement>
                        <ui:VisualElement name="docsZoneEventsButtonContainer" style="flex-direction: row; align-items: flex-start; margin-bottom: 10px; flex-shrink: 0;">
                            <ui:Foldout name="docsZoneEventsFoldout" tooltip="Expand for more info" value="false" style="height: auto; width: 22px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; margin-right: 2px; margin-left: 2px; margin-top: 2px; margin-bottom: 5px; flex-shrink: 0; flex-grow: 0; flex-wrap: nowrap;">
                                <ui:VisualElement style="width: 320px;">
                                    <ui:Label text="Zone Events are used to trigger an event or action based on a valid activator or set of activators.  Their collider volumes reside within linked Zones, so they usually do not need Zone Link or Zone Culler components.  The most common activator is the player, but other entities, like enemies or a rigidbody object like a key, can be specified.  Activators can be defined using the BoneTag system or by Crate types from the Asset Warehouse.\n&#10;&lt;i&gt;Permission Types:&lt;/i&gt;\n&#10;- &lt;b&gt;Tag matches&lt;/b&gt; are successful if the item or entity activating the Zone Event matches &lt;b&gt;&lt;i&gt;all tags&lt;/i&gt;&lt;/b&gt; listed.&#10;- &lt;b&gt;Crate matches&lt;/b&gt; are successful if &lt;b&gt;&lt;i&gt;any&lt;/i&gt;&lt;/b&gt; item or enity spawned from a listed crate is used to activate the Zone Event.&#10;- The &lt;b&gt;AND Operator&lt;/b&gt; will match successfully if both the Tags are present &lt;i&gt;and&lt;/i&gt; the entity matches at least one of the listed Crates.&#10;- The &lt;b&gt;OR Operator&lt;/b&gt; will match successfully if all Tags are present on the enitity &lt;i&gt;or&lt;/i&gt; the entity matches at least one of the listed Crates.\n&#10;The &lt;b&gt;On Zone Enter&lt;/b&gt; listener will trigger their methods and actions whenever a valid activator enters the Zone Event trigger volume.\n&#10;The &lt;b&gt;On Zone Enter OneShot &lt;/b&gt; listener will trigger their methods and actions only the first time a valid activator enters the Zone Event trigger volume.\n&#10;The &lt;b&gt;On Zone Exit&lt;/b&gt; listener will trigger their methods and actions whenever a valid activator leaves the Zone Event trigger volume." display-tooltip-when-elided="true" name="docsZoneEventsSummary" style="margin-top: 20px; margin-left: 20px; white-space: normal;" />
                                </ui:VisualElement>
                            </ui:Foldout>
                            <ui:Button text="Zone Events" display-tooltip-when-elided="true" name="docsZoneEventsButton" binding-path="docsZonesButton" tooltip="Open the Zones wiki entry in the default web browser" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; width: 80%;" />
                        </ui:VisualElement>
                        <ui:VisualElement name="docsZoneMusicButtonContainer" style="flex-direction: row; align-items: flex-start; margin-bottom: 10px; flex-shrink: 0;">
                            <ui:Foldout name="docsZoneMusicFoldout" tooltip="Expand for more info" value="false" style="height: auto; width: 22px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; margin-right: 2px; margin-left: 2px; margin-top: 2px; margin-bottom: 5px; flex-shrink: 0; flex-grow: 0; flex-wrap: nowrap;">
                                <ui:VisualElement style="width: 320px;">
                                    <ui:Label text="Zone Music is an audio track that gets played when an activator triggers the Zone Music&apos;s Zone Link.  Under most circumstances, the Event Type should be left as Primary.  The Zone Music component can handle typical Unity audio types, like .wav, .ogg and mp3 in its &lt;i&gt;Clip Main&lt;/i&gt; field.  Additionally, with the External &lt;b&gt;BONELAB Content&lt;/b&gt;  Pallet added in the Asset Warehouse (see Getting Started), all of the music from the game will be available in the form of MonoDisc Datacards, which can be set in the &lt;i&gt;Track&lt;/i&gt; field.  You can also create custom Monodiscs and add them to your own working pallet by selecting the working Pallet in the Asset Warehouse and choosing &lt;b&gt;Add Mono Disc&lt;/b&gt;.  &#10;&#10;You can quickly create a Zone Music by selecting a Zone Link and opening the &lt;i&gt;Zone Music and Ambience Utils&lt;/i&gt; foldout and using the &lt;b&gt;Add&lt;/b&gt; buttons.  The &lt;b&gt;Connect Orphaned Child&lt;/b&gt; button should rarely be needed as it is used to fix a Zone Music or Ambience component that somehow does not have the correct Zone Link field set.&#10;&#10;The music can be further tweaked by setting the overall Volume, Fade In and Out timing and Reverberation data settings.  The designer can control if the music should play when the activating entity enters the triggering Zone, if the music should stop on exiting the Zone or if that music clip should stop playing upon entry.  The Only Trigger Once toggle ensures that leaving and re-entering the zone will not restart the music clip.  The Loop setting will repeat the music audio if no Stop on Enter/Exit actions have fired and no other Zone Music has overriden the playback.  A Clip Intro raw audio file or MonoDisc Intro Track can be specified to play upon the initial activation.  This intro music will be followed by the main Zone Music audio, and, if looping is enabled, will repeat the main portion of the music clip.\n&#10;Small volume levels are recommended to ensure more immediate foreground noises, like gunshots and impacts can be easily heard by the player.  Tooltips for each option provide further recommendations.&#10;&#10;&lt;b&gt;Considerations&lt;/b&gt;&#10;&#10;- If the same track is listed in other Zones and &lt;i&gt;Loop&lt;/i&gt; is checked, but no Play On Enter/Stop on Enter/Exit boxes are checked, the current music will continue to play without interruption.  &#10;&#10;- Keep in mind that &lt;i&gt;Trigger Only Once&lt;/i&gt; applies to &lt;i&gt;Stop On Enter/Exit&lt;/i&gt; options in addition to the &lt;i&gt;Play On Enter&lt;/i&gt; option.  For example, if music is supposed to start every time the player enters a zone named &quot;Zone On&quot;  and stop any time they enter a zone named &quot;Zone Off&quot;, if the `Zone On` Zone Music has its &lt;i&gt;Trigger Only Once&lt;/i&gt; option &lt;b&gt;disabled&lt;/b&gt; but the &quot;Zone Off&quot; Zone Music has its &lt;i&gt;Trigger Only Once&lt;/i&gt; &lt;b&gt;enabled&lt;/b&gt;, then repeat visits of those Zones will only stop the music &lt;b&gt;one time&lt;/b&gt;.  If the player enters &quot;Zone On&quot; any time after the &quot;Zone Off&quot; has been triggered, the &quot;Zone On&quot; music may unintentionally play forever." display-tooltip-when-elided="true" name="docsZoneMusicSummary" style="margin-top: 20px; margin-left: 20px; white-space: normal;" />
                                </ui:VisualElement>
                            </ui:Foldout>
                            <ui:Button text="Zone Music" display-tooltip-when-elided="true" name="docsZoneMusicButton" binding-path="docsZoneMusicButton" tooltip="Open the Zones wiki entry in the default web browser" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; width: 80%;" />
                        </ui:VisualElement>
                        <ui:VisualElement name="docsZoneAmbienceButtonContainer" style="flex-direction: row; align-items: flex-start; margin-bottom: 10px; flex-shrink: 0;">
                            <ui:Foldout name="docsZoneAmbienceFoldout" tooltip="Expand for more info" value="false" style="height: auto; width: 22px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; margin-right: 2px; margin-left: 2px; margin-top: 2px; margin-bottom: 5px; flex-shrink: 0; flex-grow: 0; flex-wrap: nowrap;">
                                <ui:VisualElement style="width: 320px;">
                                    <ui:Label text="Zone Ambience defines the ambient sounds that are played while the associated Zone Link is active.  Two methods of setting the ambient track are available.  Clip Main can use raw sound file formats, like WAV and OGG.  Alternatively, a music or sound entry added to the Asset Warehouse as a Mono Disc item can be specified using the Ambient Track field.&#10;&#10;The ambience can be further tweaked by setting the overall Volume, Fade In and Out timing and Reverberation data settings.  Small volume levels are recommended to ensure more immediate foreground noises, like gunshots and impacts can be easily heard by the player.  Tooltips for each option provide further recommendations.&#10;&#10;The Zone Ambience component is best configured as a child to the Zone and Zone Link that activates it, and the Music and Ambience Utils on the Zone Link component follow this guideline.&#10;&#10;&lt;b&gt;Considerations&lt;/b&gt;&#10;&#10;- Zone Ambience will automatically loop forever even after the activator (player) leaves the triggering Zone.  The Ambient Track will continue until another Zone Ambience is triggered.   &#10;- It is highly recommended to layer ambience throughout all parts of your level to add depth and character to it.  However, if you really need ambient audio to be silent after a Zone Ambience has been triggered, simply add a Zone Ambience where you need silence, give it a valid &lt;i&gt;Ambient Track&lt;/i&gt; and then set the &lt;i&gt;Volume&lt;/i&gt; to zero.&#10;&#10;- If the same track is listed in other Zones, the current Ambient Track will continue to play without interruption. " display-tooltip-when-elided="true" name="docsZoneAmbienceSummary" style="margin-top: 20px; margin-left: 20px; white-space: normal;" />
                                </ui:VisualElement>
                            </ui:Foldout>
                            <ui:Button text="Zone Ambience" display-tooltip-when-elided="true" name="docsZoneAmbienceButton" binding-path="docsZoneAmbienceButton" tooltip="Open the Zones wiki entry in the default web browser" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; width: 80%;" />
                        </ui:VisualElement>
                        <ui:VisualElement name="docsZoneLoadLevelButtonContainer" style="flex-direction: row; align-items: flex-start; margin-bottom: 10px; flex-shrink: 0;">
                            <ui:Foldout name="docsZoneLoadLevelFoldout" tooltip="Expand for more info" value="false" style="height: auto; width: 22px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; margin-right: 2px; margin-left: 2px; margin-top: 2px; margin-bottom: 5px; flex-shrink: 0; flex-grow: 0; flex-wrap: nowrap;">
                                <ui:VisualElement style="width: 320px;">
                                    <ui:Label text="Zone Load Level triggers a level change when a valid activator (usually the player) enters the collider volume.  The Load Screen Level field specifies the &quot;loading screen&quot; area the player will see during the level loading process.  This is recommended to be a very visually simple, small, low-asset, walled-in area that prevents the player from falling.  It should display some form of loading progress status or a simple image or animation to convey the level load process.\n&#10;The Level field accepts any Level Crate found in the Asset Warehouse." display-tooltip-when-elided="true" name="docsZoneLoadLevelSummary" style="margin-top: 20px; margin-left: 20px; white-space: normal;" />
                                </ui:VisualElement>
                            </ui:Foldout>
                            <ui:Button text="Zone Load Level" display-tooltip-when-elided="true" name="docsZoneLoadLevelButton" binding-path="docsZoneLoadLevelButton" tooltip="Open the Zones wiki entry in the default web browser" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; width: 80%;" />
                        </ui:VisualElement>
                        <ui:VisualElement name="docsSceneChunksButtonContainer" style="flex-direction: row; align-items: flex-start; margin-bottom: 10px; flex-shrink: 0;">
                            <ui:Foldout name="docsSceneChunksFoldout" tooltip="Expand for more info" value="false" style="height: auto; width: 22px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; margin-right: 2px; margin-left: 2px; margin-top: 2px; margin-bottom: 5px; flex-shrink: 0; flex-grow: 0; flex-wrap: nowrap;">
                                <ui:VisualElement style="width: 320px;">
                                    <ui:Label text="Scene Chunks are an advanced topic and may require some experimentation to gain a full understanding of their use.  However, they are one of the most powerful tools at the level designer&apos;s fingertips and can unleash creativity, fidelity and performance not possible with a single scene level.&#10;&#10;The Scene Chunk dynamic multi-scene streaming system allows level designers to carve a level into several smaller scenes.  Scene Chunks, Zones, Zone Cullers and Zone Chunk Loaders are used to define which scenes will be loaded around the player and will dynamically stream in new parts of the level as the player traverses through it and streams out any scenes that the player can no longer see or reach from their current zone.&#10;&#10;The Scene Chunk system is aggressive in putting all geometry, entities and assets into a dormant state.  Even the physics state of an object is frozen and stored when an object streams out, ensuring the most minimal resource usage possible.&#10;&#10;The Level Crate&apos;s inspector has a &lt;b&gt;Muti Scene&lt;/b&gt; option that enables the Scene Chunk streaming system for the level.&lt;/b&gt;&#10;&#10;&lt;b&gt;The Root Persistent Scene&lt;/b&gt;&#10;&#10;Any items that should never be put into a streamed out or dormant state should reside in the &lt;b&gt;Root Persistent Scene&lt;/b&gt;.  This scene is &lt;i&gt;always loaded&lt;/i&gt; and should contain items like the Player Marker, Scene Chunks, Zones, Zone Music/Ambience, CrateSpawners and any Post Processing effects.  Additionally, GameObjects with global properties or that would be visible across most, if not all scenes (like the level&apos;s sky and the Directional Light), should reside in the Root Persistent Scene.  Light Probe data is shared across all scenes that are baked together, so even if Light Probe Groups are organized across scenes, the data they generate will be aggregated.  &#10;&#10;&lt;b&gt;Additive Scenes&lt;/b&gt;&#10;&#10;Static geometry, Baked Lights and Reflection Probes should be moved to seperate additive &lt;b&gt;&quot;Chunk Scenes&quot;&lt;/b&gt;.  These scenes will be streamed in and out based on the player&apos;s current Zone and its Zone Chunk Loader component that lists which Scene Chunks should be loaded while that Zone is active.   The &lt;i&gt;Chunks&lt;/i&gt; list on the Zone Chunk Loader component should contain the current Scene Chunk and any other Scene Chunks that share &lt;b&gt;line of light&lt;/b&gt; with the current one." display-tooltip-when-elided="true" name="docsSceneChunksSummary" style="margin-top: 20px; margin-left: 20px; white-space: normal;" />
                                </ui:VisualElement>
                            </ui:Foldout>
                            <ui:Button text="Scene Chunks" display-tooltip-when-elided="true" name="docsSceneChunksButton" binding-path="docsSceneChunksButton" tooltip="Open the Zones wiki entry in the default web browser" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; width: 80%;" />
                        </ui:VisualElement>
                        <ui:VisualElement name="docsSceneChunksCautionsContainer" style="flex-direction: row; align-items: flex-start; margin-bottom: 0; flex-shrink: 0;">
                            <ui:Foldout name="docsSceneChunksCautionsFoldout" tooltip="Expand for more info" value="false" text="Scene Chunks Cautions" style="height: auto; width: 200px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; margin-right: 2px; margin-left: 2px; margin-top: 2px; margin-bottom: 5px; flex-shrink: 0; flex-grow: 0; flex-wrap: nowrap; -unity-font-style: bold;">
                                <ui:VisualElement style="width: 320px;">
                                    <ui:Label text="CrateSpawners not in the Root Persistent Scene will activate any time their Scene Chunk is streamed in &lt;i&gt;and&lt;/i&gt; will deactivate any time their Scene Chunk is streamed out.  This usually has unintended consequences, like an enemy suddenly disappearing if the Scene Chunk that their CrateSpawner resides in is culled.  The CrateSpawned entity will be despawned &lt;i&gt;regardless of where they physically are in the level&lt;/i&gt; at the very instant the scene that holds the CrateSpawner streams out.  If the scene is streamed back in, a new entity will respawn at the CrateSpawner.&#10;&#10;In contrast, enemies and items from Crate Spawners that reside in the &lt;b&gt;Root Persistent Scene&lt;/b&gt; will simply be &lt;b&gt;frozen&lt;/b&gt; if they are in a Scene Chunk that is culled.  However, if they move into a new Scene Chunk, they will remain active even if the scene with their CrateSpawner is culled.  Keep these considerations in mind when designing combat areas.&#10;&#10;Scenes and Scene Chunks do not need to be small.  For example, &lt;b&gt;Big Anomaly&lt;/b&gt;, &lt;b&gt;Street Puncher&lt;/b&gt; and &lt;b&gt;Sprint Bridge&lt;/b&gt; are single scene levels.  &lt;b&gt;Ascent&lt;/b&gt; is a &lt;i&gt;Multi Scene&lt;/i&gt; level.  One of its chunks contains the entire &quot;forest&quot; vertical climbing, combat, ziplining and gravity tether sections and ends at the &quot;Staff Only&quot; door." display-tooltip-when-elided="true" name="docsSceneChunksCautions" style="margin-top: 10px; margin-left: 20px; white-space: normal; -unity-font-style: normal;" />
                                </ui:VisualElement>
                            </ui:Foldout>
                        </ui:VisualElement>
                        <ui:VisualElement name="docsSceneChunksSummaryButtonContainer" style="flex-direction: row; align-items: flex-start; margin-bottom: 5px; flex-shrink: 0;">
                            <ui:Foldout name="docsSceneChunksSummaryFoldout" tooltip="Expand for more info" value="false" text="Scene Chunks Summary" style="height: auto; width: 200px; padding-left: 0; padding-right: 0; padding-top: 0; padding-bottom: 0; margin-right: 2px; margin-left: 2px; margin-top: 2px; margin-bottom: 5px; flex-shrink: 0; flex-grow: 0; flex-wrap: nowrap; -unity-font-style: bold;">
                                <ui:VisualElement style="width: 320px;">
                                    <ui:Label text="- Scene Chunks are enabled by enabling the &lt;i&gt;Multi Scene&lt;/i&gt; toggle in the Level Crate&apos;s inspector.&#10;&#10;- The &lt;b&gt;Root Persistent Scene&lt;/b&gt; is always active and should hold the Player Marker, Zones, Zone Music/Ambience, CrateSpawners, SceneChunks, the sky, Directional Light, Light Probes and any other items that tend to be globally in view.&#10;&#10;- &lt;b&gt;Scene Chunks&lt;/b&gt; contain a Scene Layers list that holds the scene or scenes of that Scene Chunk.  These additive scenes typically hold static geometry, baked lighting, Reflection Probes, Reverb Zones and Baked Volumetrics.  Crate Spawners residing in additive scenes may yield unexpected results.&#10;&#10;- &lt;b&gt;Zone Cullers&lt;/b&gt; listed in the Scene Chunk component define the areas that should be culled as the scene is streamed out.  Spawned entities being tracked by these culled Zones are frozen (assuming their Crate Spawner resides in the Root Persistent Scene&apos;s hierarchy), freeing up physics and AI performance.  Static geometry and lighting is hidden, freeing up rendering resources.&#10;&#10;- &lt;b&gt;Zone Chunk Loaders&lt;/b&gt; define what Scene Chunks should be loaded whenever the current Zone is active.  Populating this list with Scene Chunks that would be in the player&apos;s &lt;b&gt;line of sight&lt;/b&gt; ensures that neighboring scenes get loaded so that geometry and entities do not seem to suddenly pop in or out of existence." display-tooltip-when-elided="true" name="docsSceneChunksSummary" style="margin-top: 10px; margin-left: 20px; white-space: normal; -unity-font-style: normal;" />
                                </ui:VisualElement>
                            </ui:Foldout>
                        </ui:VisualElement>
                        <ui:VisualElement name="docsLevelToolsContainer" style="margin-bottom: 20px; flex-shrink: 0;">
                            <ui:Foldout text="Level Creation Tools" name="LevelTools" value="false" style="font-size: 16px; -unity-font-style: bold;">
                                <ui:VisualElement name="docsZoneCreationOverlayButtonContainer" style="flex-direction: row; align-items: flex-start; margin-bottom: 5px; flex-shrink: 0;">
                                    <ui:Button text="Zone Creation and Linking Overlay" display-tooltip-when-elided="true" name="docsZoneCreationOverlayButton" binding-path="docsZoneCreationOverlayButton" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; width: 78%; margin-left: 12px; margin-bottom: 1px;" />
                                </ui:VisualElement>
                                <ui:VisualElement name="docsSpawnerOverlayButtonContainer" style="flex-direction: row; align-items: flex-start; margin-bottom: 5px; flex-shrink: 0;">
                                    <ui:Button text="Drag &amp; Drop Spawner Overlay" display-tooltip-when-elided="true" name="docsSpawnersOverlayButton" binding-path="docsSpawnersOverlayButton" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; width: 78%; margin-left: 12px; margin-bottom: 1px;" />
                                </ui:VisualElement>
                                <ui:VisualElement name="docsSpawnerWindowButtonContainer" style="flex-direction: row; align-items: flex-start; margin-bottom: 5px; flex-shrink: 0;">
                                    <ui:Button text="Drag &amp; Drop Spawner Window" display-tooltip-when-elided="true" name="docsSpawnersWindowButton" binding-path="docsSpawnersWindowButton" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; width: 78%; margin-left: 12px; margin-bottom: 1px;" />
                                </ui:VisualElement>
                                <ui:Label text="Lighting &amp; Sound" display-tooltip-when-elided="true" name="docsUtilitiesLabel" style="align-items: flex-start; margin-bottom: 10px; margin-left: 5px; -unity-font-style: bold; font-size: 14px; margin-top: 10px; display: none;" />
                                <ui:VisualElement name="docsLightProbeButtonContainer" style="flex-direction: row; align-items: flex-start; margin-bottom: 5px; flex-shrink: 0; display: none;">
                                    <ui:Button text="Light Probe, Reflection Probe\n&amp; Reverb Zone Automation" display-tooltip-when-elided="true" name="docsLightProbeButton" binding-path="docsLightProbeButton" style="padding-left: 12px; padding-right: 12px; padding-top: 6px; padding-bottom: 6px; width: 78%; margin-left: 12px;" />
                                </ui:VisualElement>
                            </ui:Foldout>
                        </ui:VisualElement>
                    </ui:VisualElement>
                </ui:VisualElement>
            </ui:ScrollView>
        </ui:VisualElement>
    </ui:VisualElement>
</ui:UXML>
