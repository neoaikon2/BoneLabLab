using System.Collections.Generic;
using UnityEngine;

[HelpURL("https://developer.oculus.com/reference/unity/latest/class_o_v_r_custom_face_extensions")]
public static class OVRCustomFaceExtensions
{
	public static OVRFaceExpressions.FaceExpression[] AutoGenerateMapping(Mesh skinnedMesh, string[] blendShapeNames, OVRFaceExpressions.FaceExpression[] faceExpressions, bool allowDuplicateMapping)
	{
		return null;
	}

	private static OVRFaceExpressions.FaceExpression FindBestMatch(HashSet<string>[] tokenizedOptions, string searchString, OVRFaceExpressions.FaceExpression[] expressions, OVRFaceExpressions.FaceExpression fallback)
	{
		return default(OVRFaceExpressions.FaceExpression);
	}

	private static bool IsLipsToward(string blendshapeName)
	{
		return false;
	}

	internal static HashSet<string> TokenizeString(string s)
	{
		return null;
	}

	private static string SplitCamelCase(string input)
	{
		return null;
	}

	public static void AutoMapBlendshapes(this OVRCustomFace customFace)
	{
	}

	public static void ClearBlendshapes(this OVRCustomFace customFace)
	{
	}

	internal static OVRFaceExpressions.FaceExpression[] OculusFaceAutoGenerateMapping(Mesh sharedMesh, bool allowDuplicateMapping)
	{
		return null;
	}

	internal static OVRFaceExpressions.FaceExpression[] CustomAutoGeneratedMapping(OVRCustomFace customFace, Mesh sharedMesh, bool allowDuplicateMapping)
	{
		return null;
	}
}
